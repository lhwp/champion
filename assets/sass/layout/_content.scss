#content {
	overflow-x: hidden;
	@include vendor('display', 'grid');
	@include vendor('align-items', 'center');
	@include vendor('justify-content', 'center');
	text-align: center;
	
	grid-template-columns: 1fr;
	grid-template-rows: auto;
	grid-template-areas:
		"welcome"
		"intro"
		"services"
		"showcase";

	> #welcome {
		grid-area: welcome;
		position: relative;
		z-index: _misc(z-index-base);
	}

	> #intro {
		grid-area: intro;
		position: relative;
		z-index: _misc(z-index-base);
	}
	
	> #services {
		grid-area: services;
		position: relative;
		z-index: _misc(z-index-base);
	}

	> #showcase {
		grid-area: showcase;
		position: relative;
		z-index: _misc(z-index-base);
	}
}


#content:after {
	// On Safari / iOS, setting background of #welcome to cover with 
	// background-attachment to fixed causes the image to expand
	// too much to be overly-pixelated (as it uses the document's
	// height instead of viewport height for the stretching).
	// Work around: Fix the element itself instead of the background
	content:"";
	position: fixed;
	top:0;
	height:100vh; // fix for mobile browser address bar appearing disappearing
	left:0;
	right:0;
	
	background: linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url('../images/background/plane.jpg'); 
	//https://www.pexels.com/photo/action-air-aircraft-airplane-243167/

	background-position: center center, center center;
	background-repeat: no-repeat, no-repeat;
	@include vendor('background-size', 'cover, cover');
	@include vendor('backface-visibility', 'hidden');
	
	z-index: _misc(z-index-base) - 1; // needed to keep in the background
}


#content {
	> #welcome {
/*
		// Alternatively, only fix background-attachment on larger devices
		// to disable on iOS devices.  But cannot guarantee as devices
		// get bigger.
		background: linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url('../images/background/plane.jpg'); 
		//https://www.pexels.com/photo/action-air-aircraft-airplane-243167/
		
		background-position: center center, center center;
		-webkit-background-size: cover, cover;
		-moz-background-size: cover, cover;
		-o-background-size: cover, cover;
		background-size: cover, cover;

		@media only screen and (_breakpoint(large)) {
			// Only do this on large devices
			background-attachment: fixed, fixed;
		}
*/

		> .grid_box {
			position: absolute;
			top: 30%; right: 0;
			bottom: 0; left: 0;
		}
		
		color: _palette(bg);
		h2 {
			font-size: 3rem;
			line-height: 1em;
		}
		h1 {
			font-family: _font(family2);
			font-weight: _font(weight2);
			margin: 0;
			font-size: 1rem;
			letter-spacing: 0.08em;
		}

		@media only screen and (_breakpoint(medium)) {
			h2 {
				font-size: 4.25rem;
				line-height: 1em;
			}
			h1 {
				font-family: _font(family2);
				font-weight: _font(weight2);
				margin: 0;
				font-size: 1.5rem;
				letter-spacing: 0.08em;
			}
		}
	}

	> #intro {
		background-color: _palette(bg);
		padding-top: 3rem;
		padding-bottom: 3rem;
	}
	
	> #services {
		background: linear-gradient( rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3) ), yellow;
		background-size: cover, cover;
		background-attachment: fixed, fixed;
		background-position: center, center;

		padding-top: 3rem;
		padding-bottom: 3rem;
	}


	> #showcase {
		background-color: _palette(bg);
		
// Non-CSS Grid implementation starts here (Use until Edge HTML16)
		> #showcase_grid {
			> .responsive {
				box-sizing: border-box;
				float: left;
				width: 100%;
				padding-bottom: 1rem;
				padding-left: 1rem;
				padding-right: 1rem;

				@media only screen and (_breakpoint(medium)) {
					width: 49.99999%;
				}
				@media only screen and (_breakpoint(large)) {
					width: 24.99999%;
				}

				> img {
					border: 1px solid #ccc;
					width: 100%;
					height: auto;
				}
			}
		}
// Non-CSS Grid implementation ends here


/* Use the above implementation until Edge HTML16 where CSS Grid will be properly supported
// CSS Grid implementation starts here
		> #showcase_grid {

			> .responsive {
				box-sizing: border-box;
				width: 100%;

				> img {
					border: 1px solid #ccc;
					width: 100%;
					height: auto;
				}
			}

			@include vendor('display', 'grid');
			@include vendor('justify-content', 'center');
			text-align: center;

			grid-template-columns: 1fr;
			grid-template-rows: auto;
			grid-gap: 2rem;
			grid-template-areas:
				"A"
				"B"
				"C"
				"D"
				"E"
				"F"
				"G"
				"H";

			@media only screen and (_breakpoint(medium)) {
				grid-template-columns: 1fr 1fr;
				grid-template-rows: auto;
				grid-gap: 2rem;
				grid-template-areas:
					"A B"
					"C D"
					"E F"
					"G H";
			}

			@media only screen and (_breakpoint(large)) {
				grid-template-columns: 1fr 1fr 1fr 1fr;
				grid-template-rows: auto;
				grid-gap: 2em;
				grid-template-areas:
					"A B C D"
					"E F G H";
			}
	
			> #showcase_1 {
				grid-area: A;
			}
			> #showcase_2 {
				grid-area: B;
			}
			> #showcase_3 {
				grid-area: C;
			}
			> #showcase_4 {
				grid-area: D;
			}
			> #showcase_5 {
				grid-area: E;
			}
			>#showcase_6 {
				grid-area: F;
			}
		}
// CSS Grid implementation ends here
*/
		padding-top: 3rem;
		padding-bottom: 3rem;
	}


	> .fullscreen {
		min-height: 100vh;
	}
	
}


@import 'header';
@import 'footer';